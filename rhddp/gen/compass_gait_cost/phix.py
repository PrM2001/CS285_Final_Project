# -----------------------------------------------------------------------------
# This file was autogenerated by symforce from template:
#     function/FUNCTION.py.jinja
# Do NOT modify by hand.
# -----------------------------------------------------------------------------

# pylint: disable=too-many-locals,too-many-lines,too-many-statements,unused-argument,unused-import

import math
import typing as T

import numpy

import sym


def phix(x_t):
    # type: (numpy.ndarray) -> numpy.ndarray
    """
    This function was autogenerated. Do not modify by hand.

    Args:
        x_t: Matrix81

    Outputs:
        phix: Matrix18
    """

    # Total ops: 20

    # Input arrays
    if x_t.shape == (8,):
        x_t = x_t.reshape((8, 1))
    elif x_t.shape != (8, 1):
        raise IndexError(
            "x_t is expected to have shape (8, 1) or (8,); instead had shape {}".format(x_t.shape)
        )

    # Intermediate terms (4)
    _tmp0 = 2 * x_t[2, 0] + x_t[3, 0]
    _tmp1 = 0.157237166313628 * math.exp(3 * x_t[2, 0])
    _tmp2 = math.exp(2 * x_t[6, 0] + x_t[7, 0] - 2)
    _tmp3 = _tmp2 / (_tmp2 + 1)

    # Output terms
    _phix = numpy.zeros(8)
    _phix[0] = 0
    _phix[1] = 0
    _phix[2] = 3600.0 * _tmp0 + 525.0 * _tmp1 / (_tmp1 + 1)
    _phix[3] = 1800.0 * _tmp0
    _phix[4] = 600.0 * x_t[4, 0]
    _phix[5] = 0
    _phix[6] = 20.0 * _tmp3
    _phix[7] = 10.0 * _tmp3
    return _phix
