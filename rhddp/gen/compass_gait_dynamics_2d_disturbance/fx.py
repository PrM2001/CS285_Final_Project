# -----------------------------------------------------------------------------
# This file was autogenerated by symforce from template:
#     function/FUNCTION.py.jinja
# Do NOT modify by hand.
# -----------------------------------------------------------------------------

# pylint: disable=too-many-locals,too-many-lines,too-many-statements,unused-argument,unused-import

import math
import typing as T

import numpy

import sym


def fx(x, u):
    # type: (numpy.ndarray, numpy.ndarray) -> numpy.ndarray
    """
    This function was autogenerated. Do not modify by hand.

    Args:
        x: Matrix81
        u: Matrix11

    Outputs:
        fx: Matrix88
    """

    # Total ops: 1976

    # Input arrays
    if x.shape == (8,):
        x = x.reshape((8, 1))
    elif x.shape != (8, 1):
        raise IndexError(
            "x is expected to have shape (8, 1) or (8,); instead had shape {}".format(x.shape)
        )

    if u.shape == (1,):
        u = u.reshape((1, 1))
    elif u.shape != (1, 1):
        raise IndexError(
            "u is expected to have shape (1, 1) or (1,); instead had shape {}".format(u.shape)
        )

    # Intermediate terms (434)
    _tmp0 = x[2, 0] + x[3, 0]
    _tmp1 = math.cos(_tmp0)
    _tmp2 = math.cos(x[2, 0])
    _tmp3 = _tmp1 + _tmp2
    _tmp4 = math.sin(_tmp0)
    _tmp5 = math.sin(x[2, 0])
    _tmp6 = _tmp4 + _tmp5
    _tmp7 = -0.0833333333333333 * _tmp3**2 - 0.0833333333333333 * _tmp6**2 + 0.5
    _tmp8 = 1 / _tmp7
    _tmp9 = 0.166666666666667 * _tmp6
    _tmp10 = -_tmp4 - _tmp5
    _tmp11 = 0.166666666666667 * _tmp3
    _tmp12 = -_tmp10 * _tmp11 - _tmp3 * _tmp9
    _tmp13 = 0.0833333333333333 * _tmp4
    _tmp14 = 0.0833333333333333 * _tmp1
    _tmp15 = -_tmp13 * _tmp6 - _tmp14 * _tmp3 + 0.25
    _tmp16 = _tmp15**2
    _tmp17 = _tmp7 ** (-2)
    _tmp18 = _tmp16 * _tmp17
    _tmp19 = _tmp12 * _tmp18
    _tmp20 = _tmp16 * _tmp8
    _tmp21 = -0.0833333333333333 * _tmp1**2 - _tmp20 - 0.0833333333333333 * _tmp4**2 + 0.25
    _tmp22 = 1 / _tmp21
    _tmp23 = 1.0 * _tmp22
    _tmp24 = -_tmp14 * _tmp6
    _tmp25 = -_tmp10 * _tmp14 + _tmp24
    _tmp26 = _tmp15 * _tmp8
    _tmp27 = 2 * _tmp26
    _tmp28 = _tmp19 - _tmp25 * _tmp27
    _tmp29 = _tmp21 ** (-2)
    _tmp30 = 1.0 * _tmp29
    _tmp31 = _tmp28 * _tmp30
    _tmp32 = _tmp22 * _tmp25
    _tmp33 = -_tmp19 * _tmp23 - _tmp20 * _tmp31 + 2.0 * _tmp26 * _tmp32
    _tmp34 = _tmp33 * _tmp8
    _tmp35 = 0.5 * _tmp34
    _tmp36 = 0.5 * _tmp1
    _tmp37 = _tmp28 * _tmp29
    _tmp38 = _tmp36 * _tmp37
    _tmp39 = 0.5 * _tmp4
    _tmp40 = _tmp15 * _tmp22
    _tmp41 = _tmp40 * _tmp8
    _tmp42 = _tmp39 * _tmp41
    _tmp43 = -_tmp42
    _tmp44 = _tmp32 * _tmp8
    _tmp45 = _tmp20 * _tmp23 + 1.0
    _tmp46 = _tmp45 * _tmp8
    _tmp47 = 0.5 * _tmp46
    _tmp48 = _tmp12 * _tmp17
    _tmp49 = _tmp45 * _tmp48
    _tmp50 = 0.5 * _tmp3
    _tmp51 = _tmp1 * _tmp22
    _tmp52 = 0.5 * _tmp51
    _tmp53 = _tmp15 * _tmp52
    _tmp54 = (
        -_tmp10 * _tmp47
        - _tmp26 * _tmp38
        - _tmp3 * _tmp35
        + _tmp36 * _tmp44
        + _tmp43
        - _tmp48 * _tmp53
        + _tmp49 * _tmp50
    )
    _tmp55 = 1.0 * _tmp2
    _tmp56 = _tmp46 * _tmp55
    _tmp57 = _tmp26 * _tmp52
    _tmp58 = -_tmp3 * _tmp47 + _tmp57
    _tmp59 = 0.333333333333333 * _tmp58
    _tmp60 = _tmp56 + _tmp59
    _tmp61 = _tmp55 * _tmp60
    _tmp62 = 0.166666666666667 * _tmp1
    _tmp63 = -_tmp62
    _tmp64 = _tmp11 * _tmp8
    _tmp65 = _tmp15 * _tmp64
    _tmp66 = _tmp63 + _tmp65
    _tmp67 = -_tmp11 - _tmp40 * _tmp66
    _tmp68 = _tmp67 * _tmp8
    _tmp69 = _tmp55 * _tmp68
    _tmp70 = -_tmp52 * _tmp66
    _tmp71 = -_tmp50 * _tmp68 + _tmp70
    _tmp72 = _tmp71 + 1
    _tmp73 = 0.333333333333333 * _tmp72
    _tmp74 = _tmp61 + _tmp69 + _tmp73
    _tmp75 = 1 / _tmp74
    _tmp76 = 1.0 * _tmp5
    _tmp77 = _tmp68 * _tmp76
    _tmp78 = _tmp42 - _tmp47 * _tmp6
    _tmp79 = 0.333333333333333 * _tmp78
    _tmp80 = _tmp46 * _tmp76
    _tmp81 = _tmp79 + _tmp80
    _tmp82 = _tmp55 * _tmp81
    _tmp83 = _tmp22 * _tmp39
    _tmp84 = _tmp66 * _tmp83
    _tmp85 = 0.5 * _tmp6
    _tmp86 = -_tmp68 * _tmp85 - _tmp84
    _tmp87 = 0.333333333333333 * _tmp86
    _tmp88 = _tmp77 + _tmp82 + _tmp87
    _tmp89 = _tmp75 * _tmp88
    _tmp90 = 0.166666666666667 * _tmp4
    _tmp91 = _tmp8 * _tmp9
    _tmp92 = _tmp15 * _tmp91
    _tmp93 = -_tmp90 + _tmp92
    _tmp94 = -_tmp40 * _tmp93 - _tmp9
    _tmp95 = _tmp8 * _tmp94
    _tmp96 = _tmp83 * _tmp93
    _tmp97 = -_tmp85 * _tmp95 - _tmp96 + 1
    _tmp98 = 0.333333333333333 * _tmp97
    _tmp99 = _tmp76 * _tmp95
    _tmp100 = _tmp76 * _tmp81
    _tmp101 = _tmp60 * _tmp76
    _tmp102 = -_tmp52 * _tmp93
    _tmp103 = _tmp102 - _tmp50 * _tmp95
    _tmp104 = 0.333333333333333 * _tmp103
    _tmp105 = _tmp55 * _tmp95
    _tmp106 = _tmp101 + _tmp104 + _tmp105
    _tmp107 = _tmp106 * _tmp75
    _tmp108 = _tmp107 * _tmp88
    _tmp109 = _tmp100 - _tmp108 + _tmp98 + _tmp99
    _tmp110 = 1 / _tmp109
    _tmp111 = _tmp110 * _tmp76
    _tmp112 = _tmp111 * _tmp89
    _tmp113 = _tmp108 * _tmp110 + 1
    _tmp114 = _tmp55 * _tmp75
    _tmp115 = _tmp113 * _tmp114
    _tmp116 = -_tmp112 + _tmp115
    _tmp117 = _tmp5 * x[6, 0]
    _tmp118 = 1.0 * _tmp117
    _tmp119 = _tmp116 * _tmp118
    _tmp120 = _tmp110 * _tmp55
    _tmp121 = -_tmp107 * _tmp120
    _tmp122 = _tmp111 + _tmp121
    _tmp123 = _tmp2 * x[6, 0]
    _tmp124 = 1.0 * _tmp123
    _tmp125 = _tmp122 * _tmp124
    _tmp126 = -x[6, 0] - x[7, 0]
    _tmp127 = _tmp4 * x[7, 0]
    _tmp128 = 0.5 * _tmp127
    _tmp129 = _tmp4 * x[6, 0]
    _tmp130 = 0.5 * x[6, 0]
    _tmp131 = -_tmp126 * _tmp128 + _tmp130 * (_tmp117 + _tmp127 + _tmp129)
    _tmp132 = _tmp116 * _tmp55 + _tmp122 * _tmp76
    _tmp133 = _tmp116 * _tmp73 + _tmp122 * _tmp87 + _tmp132 * _tmp68
    _tmp134 = _tmp132 * _tmp8
    _tmp135 = 1.0 * _tmp40
    _tmp136 = _tmp41 * _tmp85 - _tmp83
    _tmp137 = 0.333333333333333 * _tmp136
    _tmp138 = -_tmp52
    _tmp139 = _tmp138 + _tmp41 * _tmp50
    _tmp140 = 0.333333333333333 * _tmp116
    _tmp141 = _tmp122 * _tmp137 - _tmp134 * _tmp135 + _tmp139 * _tmp140
    _tmp142 = 4.905 * _tmp4
    _tmp143 = (
        -4.905 * _tmp116 * _tmp59 - 4.905 * _tmp122 * _tmp79 - 4.905 * _tmp134 * _tmp45 + 4.905
    )
    _tmp144 = _tmp104 * _tmp116 + _tmp122 * _tmp98 + _tmp132 * _tmp95
    _tmp145 = x[6, 0] + x[7, 0]
    _tmp146 = _tmp1 * x[7, 0]
    _tmp147 = 0.5 * _tmp146
    _tmp148 = _tmp3 * x[6, 0]
    _tmp149 = -_tmp130 * (_tmp146 + _tmp148) - _tmp145 * _tmp147 - 29.43
    _tmp150 = (
        -_tmp131 * _tmp133
        + _tmp141 * _tmp142
        - _tmp143 * _tmp6
        - _tmp144 * _tmp149
        - x[6, 0] * (-_tmp119 + _tmp125)
    )
    _tmp151 = 0.001 * _tmp150
    _tmp152 = 0.333333333333333 * _tmp110
    _tmp153 = _tmp139 * _tmp152
    _tmp154 = _tmp37 * _tmp66
    _tmp155 = _tmp11 * _tmp15
    _tmp156 = 0.166666666666667 * _tmp10
    _tmp157 = -_tmp155 * _tmp48 + _tmp156 * _tmp26 + _tmp25 * _tmp64 + _tmp90
    _tmp158 = (
        _tmp15 * _tmp154 - _tmp157 * _tmp40 - _tmp32 * _tmp66 + 0.166666666666667 * _tmp5 + _tmp90
    )
    _tmp159 = _tmp158 * _tmp8
    _tmp160 = _tmp41 * _tmp62
    _tmp161 = _tmp37 * _tmp90
    _tmp162 = _tmp40 * _tmp48
    _tmp163 = (
        -_tmp11 * _tmp46
        + _tmp160
        - _tmp161 * _tmp26
        - _tmp162 * _tmp90
        + _tmp34 * _tmp76
        - _tmp34 * _tmp9
        + _tmp44 * _tmp90
        - _tmp49 * _tmp76
        + _tmp49 * _tmp9
        + _tmp56
    )
    _tmp164 = _tmp22 * _tmp66
    _tmp165 = -_tmp164 * _tmp62
    _tmp166 = _tmp22 * _tmp90
    _tmp167 = _tmp48 * _tmp67
    _tmp168 = (
        -_tmp100
        - _tmp11 * _tmp68
        - _tmp157 * _tmp166
        - _tmp158 * _tmp91
        + _tmp159 * _tmp76
        + _tmp161 * _tmp66
        + _tmp163 * _tmp55
        + _tmp165
        - _tmp167 * _tmp76
        + _tmp167 * _tmp9
        + _tmp69
    )
    _tmp169 = _tmp168 * _tmp75
    _tmp170 = 0.5 * _tmp10
    _tmp171 = _tmp26 * _tmp37
    _tmp172 = (
        -_tmp162 * _tmp50 + _tmp170 * _tmp41 - _tmp171 * _tmp50 + _tmp38 + _tmp44 * _tmp50 + _tmp83
    )
    _tmp173 = _tmp152 * _tmp89
    _tmp174 = _tmp109 ** (-2)
    _tmp175 = _tmp48 * _tmp94
    _tmp176 = _tmp22 * _tmp93
    _tmp177 = -_tmp176 * _tmp62
    _tmp178 = _tmp107 * _tmp168
    _tmp179 = _tmp37 * _tmp93
    _tmp180 = _tmp15 * _tmp9
    _tmp181 = -_tmp180 * _tmp48 + _tmp25 * _tmp91 + _tmp66
    _tmp182 = (
        _tmp15 * _tmp179 - _tmp181 * _tmp40 - 0.166666666666667 * _tmp2 - _tmp32 * _tmp93 + _tmp63
    )
    _tmp183 = _tmp182 * _tmp8
    _tmp184 = _tmp176 * _tmp90
    _tmp185 = _tmp37 * _tmp62
    _tmp186 = -_tmp41 * _tmp90
    _tmp187 = (
        -_tmp11 * _tmp34
        + _tmp11 * _tmp49
        - _tmp156 * _tmp46
        - _tmp162 * _tmp62
        - _tmp185 * _tmp26
        + _tmp186
        + _tmp34 * _tmp55
        + _tmp44 * _tmp62
        - _tmp49 * _tmp55
        - _tmp80
    )
    _tmp188 = _tmp22 * _tmp62
    _tmp189 = (
        _tmp11 * _tmp175
        - _tmp11 * _tmp183
        - _tmp156 * _tmp95
        - _tmp175 * _tmp55
        - _tmp181 * _tmp188
        + _tmp183 * _tmp55
        + _tmp184
        + _tmp185 * _tmp93
        + _tmp187 * _tmp76
        + _tmp61
        - _tmp99
    )
    _tmp190 = _tmp189 * _tmp89
    _tmp191 = _tmp164 * _tmp90
    _tmp192 = _tmp74 ** (-2)
    _tmp193 = _tmp192 * (
        -_tmp101
        + _tmp11 * _tmp167
        - _tmp156 * _tmp68
        - _tmp157 * _tmp188
        - _tmp158 * _tmp64
        + _tmp159 * _tmp55
        - _tmp167 * _tmp55
        + _tmp185 * _tmp66
        + _tmp187 * _tmp55
        + _tmp191
        - _tmp77
    )
    _tmp194 = _tmp106 * _tmp88
    _tmp195 = _tmp193 * _tmp194
    _tmp196 = _tmp174 * (
        _tmp105
        - _tmp11 * _tmp95
        + _tmp161 * _tmp93
        + _tmp163 * _tmp76
        - _tmp166 * _tmp181
        - _tmp175 * _tmp76
        + _tmp175 * _tmp9
        + _tmp177
        - _tmp178
        + _tmp183 * _tmp76
        - _tmp183 * _tmp9
        - _tmp190
        + _tmp195
        + _tmp82
    )
    _tmp197 = _tmp196 * _tmp89
    _tmp198 = _tmp196 * _tmp76
    _tmp199 = -_tmp198
    _tmp200 = _tmp193 * _tmp88
    _tmp201 = _tmp112 + _tmp120
    _tmp202 = -_tmp120 * _tmp169 + _tmp120 * _tmp200 + _tmp197 * _tmp55 + _tmp199 + _tmp201
    _tmp203 = 1.0 * _tmp8
    _tmp204 = _tmp203 * _tmp40
    _tmp205 = _tmp137 * _tmp196
    _tmp206 = 0.333333333333333 * _tmp139
    _tmp207 = _tmp37 * _tmp39
    _tmp208 = _tmp139 - _tmp162 * _tmp85 - _tmp171 * _tmp85 + _tmp207 + _tmp44 * _tmp85
    _tmp209 = _tmp152 * _tmp208
    _tmp210 = -_tmp120 * _tmp89
    _tmp211 = _tmp111 + _tmp210
    _tmp212 = _tmp211 * _tmp8
    _tmp213 = _tmp15 * _tmp31
    _tmp214 = 1.0 * _tmp32
    _tmp215 = _tmp135 * _tmp48
    _tmp216 = (
        -_tmp153 * _tmp169
        + _tmp153 * _tmp200
        - _tmp172 * _tmp173
        + _tmp197 * _tmp206
        - _tmp202 * _tmp204
        - _tmp205
        + _tmp209
        + _tmp211 * _tmp215
        + _tmp212 * _tmp213
        - _tmp212 * _tmp214
    )
    _tmp217 = (
        _tmp154 * _tmp36
        - _tmp157 * _tmp52
        - _tmp159 * _tmp50
        + _tmp167 * _tmp50
        - _tmp170 * _tmp68
        + _tmp84
    )
    _tmp218 = _tmp113 * _tmp75
    _tmp219 = _tmp107 * _tmp111
    _tmp220 = _tmp115 - _tmp219
    _tmp221 = _tmp220 * _tmp8
    _tmp222 = _tmp136 * _tmp152
    _tmp223 = -_tmp107 * _tmp222 - _tmp135 * _tmp221 + _tmp206 * _tmp218
    _tmp224 = 0.333333333333333 * _tmp223
    _tmp225 = _tmp189 * _tmp75
    _tmp226 = -_tmp108 * _tmp196 + _tmp110 * _tmp178 + _tmp110 * _tmp190 - _tmp110 * _tmp195
    _tmp227 = _tmp226 * _tmp75
    _tmp228 = _tmp113 * _tmp193
    _tmp229 = _tmp106 * _tmp193
    _tmp230 = 0.333333333333333 * _tmp218
    _tmp231 = -_tmp218 * _tmp76
    _tmp232 = _tmp121 + _tmp231
    _tmp233 = _tmp114 * _tmp226 - _tmp228 * _tmp55
    _tmp234 = _tmp107 * _tmp198 - _tmp111 * _tmp225 + _tmp111 * _tmp229 + _tmp232 + _tmp233
    _tmp235 = (
        _tmp107 * _tmp205
        - _tmp107 * _tmp209
        + _tmp172 * _tmp230
        - _tmp204 * _tmp234
        + _tmp206 * _tmp227
        - _tmp206 * _tmp228
        + _tmp213 * _tmp221
        - _tmp214 * _tmp221
        + _tmp215 * _tmp220
        - _tmp222 * _tmp225
        + _tmp222 * _tmp229
    )
    _tmp236 = _tmp107 * _tmp55
    _tmp237 = (
        -_tmp120 * _tmp225 + _tmp120 * _tmp229 + _tmp120 + _tmp196 * _tmp236 + _tmp199 + _tmp219
    )
    _tmp238 = (
        -_tmp111 * _tmp169 + _tmp111 * _tmp200 + _tmp198 * _tmp89 + _tmp210 + _tmp231 + _tmp233
    )
    _tmp239 = 0.333333333333333 * _tmp122
    _tmp240 = -_tmp116 * _tmp76 + _tmp122 * _tmp55
    _tmp241 = _tmp237 * _tmp76 + _tmp238 * _tmp55 + _tmp240
    _tmp242 = (
        _tmp132 * _tmp215
        + _tmp134 * _tmp213
        - _tmp134 * _tmp214
        + _tmp137 * _tmp237
        + _tmp140 * _tmp172
        - _tmp204 * _tmp241
        + _tmp206 * _tmp238
        + _tmp208 * _tmp239
    )
    _tmp243 = 0.5 * _tmp183
    _tmp244 = (
        -_tmp170 * _tmp95
        + _tmp175 * _tmp50
        + _tmp179 * _tmp36
        - _tmp181 * _tmp52
        - _tmp243 * _tmp3
        + _tmp96
    )
    _tmp245 = -_tmp135 * _tmp212 - _tmp139 * _tmp173 + _tmp222
    _tmp246 = 0.333333333333333 * _tmp245
    _tmp247 = 0.333333333333333 * _tmp141
    _tmp248 = 0.003 * u[0, 0]
    _tmp249 = _tmp154 * _tmp39 - _tmp157 * _tmp83 - _tmp159 * _tmp85 + _tmp167 * _tmp85 + _tmp71
    _tmp250 = -_tmp126 * _tmp147
    _tmp251 = _tmp1 * x[6, 0]
    _tmp252 = _tmp146 + _tmp251
    _tmp253 = _tmp130 * (_tmp123 + _tmp252) + _tmp250
    _tmp254 = _tmp128 * _tmp145
    _tmp255 = -_tmp127
    _tmp256 = -_tmp130 * (_tmp10 * x[6, 0] + _tmp255) + _tmp254
    _tmp257 = (
        -_tmp162 * _tmp39
        - _tmp207 * _tmp26
        - _tmp35 * _tmp6
        + _tmp39 * _tmp44
        + _tmp49 * _tmp85
        + _tmp58
    )
    _tmp258 = 4.905 * _tmp6
    _tmp259 = _tmp103 + _tmp175 * _tmp85 + _tmp179 * _tmp39 - _tmp181 * _tmp83 - _tmp243 * _tmp6
    _tmp260 = 4.905 * _tmp1
    _tmp261 = _tmp141 * _tmp260
    _tmp262 = (
        -_tmp131
        * (
            -_tmp132 * _tmp167
            + _tmp134 * _tmp158
            + _tmp140 * _tmp217
            + _tmp237 * _tmp87
            + _tmp238 * _tmp73
            + _tmp239 * _tmp249
            + _tmp241 * _tmp68
        )
        - _tmp133 * _tmp253
        + _tmp142 * _tmp242
        - _tmp143 * _tmp3
        - _tmp144 * _tmp256
        - _tmp149
        * (
            _tmp104 * _tmp238
            - _tmp132 * _tmp175
            + _tmp134 * _tmp182
            + _tmp140 * _tmp244
            + _tmp237 * _tmp98
            + _tmp239 * _tmp259
            + _tmp241 * _tmp95
        )
        - _tmp258
        * (
            _tmp132 * _tmp49
            - _tmp134 * _tmp33
            - _tmp140 * _tmp54
            - _tmp237 * _tmp79
            - _tmp238 * _tmp59
            - _tmp239 * _tmp257
            - _tmp241 * _tmp46
        )
        + _tmp261
        - x[6, 0] * (-_tmp116 * _tmp124 - _tmp118 * _tmp122 - _tmp118 * _tmp238 + _tmp124 * _tmp237)
    )
    _tmp263 = 0.001 * _tmp58
    _tmp264 = 1.0 * _tmp110
    _tmp265 = _tmp123 * _tmp264
    _tmp266 = _tmp117 * _tmp264
    _tmp267 = _tmp124 * _tmp196
    _tmp268 = _tmp110 * _tmp87
    _tmp269 = _tmp107 * _tmp268 - _tmp218 * _tmp73 - _tmp220 * _tmp68 + 1.0
    _tmp270 = _tmp223 * _tmp260
    _tmp271 = _tmp110 * _tmp79
    _tmp272 = _tmp152 * _tmp257
    _tmp273 = _tmp196 * _tmp79
    _tmp274 = _tmp152 * _tmp249
    _tmp275 = _tmp220 * _tmp67
    _tmp276 = _tmp196 * _tmp87
    _tmp277 = _tmp110 * _tmp98
    _tmp278 = _tmp196 * _tmp98
    _tmp279 = _tmp152 * _tmp259
    _tmp280 = _tmp104 * _tmp218 - _tmp107 * _tmp277 + _tmp220 * _tmp95
    _tmp281 = -_tmp107 * _tmp271 + _tmp218 * _tmp59 + _tmp221 * _tmp45
    _tmp282 = (
        _tmp131
        * (
            _tmp107 * _tmp274
            - _tmp107 * _tmp276
            - _tmp158 * _tmp221
            - _tmp217 * _tmp230
            + _tmp225 * _tmp268
            - _tmp227 * _tmp73
            + _tmp228 * _tmp73
            - _tmp229 * _tmp268
            - _tmp234 * _tmp68
            + _tmp275 * _tmp48
        )
        + _tmp142 * _tmp235
        - _tmp149
        * (
            _tmp104 * _tmp227
            - _tmp104 * _tmp228
            + _tmp107 * _tmp278
            - _tmp107 * _tmp279
            - _tmp175 * _tmp220
            + _tmp182 * _tmp221
            - _tmp225 * _tmp277
            + _tmp229 * _tmp277
            + _tmp230 * _tmp244
            + _tmp234 * _tmp95
        )
        + _tmp253 * _tmp269
        - _tmp256 * _tmp280
        + _tmp258
        * (
            -_tmp107 * _tmp272
            + _tmp107 * _tmp273
            - _tmp220 * _tmp49
            + _tmp221 * _tmp33
            - _tmp225 * _tmp271
            + _tmp227 * _tmp59
            - _tmp228 * _tmp59
            + _tmp229 * _tmp271
            + _tmp230 * _tmp54
            + _tmp234 * _tmp46
        )
        + _tmp270
        + 4.905 * _tmp281 * _tmp3
        - x[6, 0]
        * (
            _tmp107 * _tmp266
            + _tmp107 * _tmp267
            - _tmp118 * _tmp227
            + _tmp118 * _tmp228
            - _tmp124 * _tmp218
            - _tmp225 * _tmp265
            + _tmp229 * _tmp265
        )
    )
    _tmp283 = 0.001 * _tmp72
    _tmp284 = _tmp110 * _tmp200
    _tmp285 = _tmp110 * _tmp75
    _tmp286 = _tmp168 * _tmp285
    _tmp287 = _tmp245 * _tmp260
    _tmp288 = _tmp110 * _tmp89
    _tmp289 = 4.905 * _tmp211 * _tmp46 + 4.905 * _tmp271 - 4.905 * _tmp288 * _tmp59
    _tmp290 = _tmp104 * _tmp288 - _tmp211 * _tmp95 - _tmp277 + 1.0
    _tmp291 = _tmp211 * _tmp68 + _tmp268 - _tmp288 * _tmp73
    _tmp292 = _tmp104 * _tmp285
    _tmp293 = (
        -_tmp131
        * (
            _tmp158 * _tmp212
            - _tmp167 * _tmp211
            - _tmp173 * _tmp217
            + _tmp197 * _tmp73
            + _tmp202 * _tmp68
            + _tmp274
            - _tmp276
            + _tmp284 * _tmp73
            - _tmp286 * _tmp73
        )
        + _tmp142 * _tmp216
        + _tmp149
        * (
            -_tmp104 * _tmp197
            - _tmp104 * _tmp284
            + _tmp168 * _tmp292
            + _tmp173 * _tmp244
            + _tmp175 * _tmp211
            - _tmp182 * _tmp212
            - _tmp202 * _tmp95
            + _tmp278
            - _tmp279
        )
        - _tmp253 * _tmp291
        + _tmp256 * _tmp290
        + _tmp258
        * (
            -_tmp173 * _tmp54
            + _tmp197 * _tmp59
            + _tmp202 * _tmp46
            + _tmp211 * _tmp34
            - _tmp211 * _tmp49
            + _tmp272
            - _tmp273
            + _tmp284 * _tmp59
            - _tmp286 * _tmp59
        )
        + _tmp287
        + _tmp289 * _tmp3
        - x[6, 0]
        * (
            -_tmp118 * _tmp197
            + _tmp169 * _tmp266
            - _tmp200 * _tmp266
            + _tmp265 * _tmp89
            - _tmp266
            - _tmp267
        )
    )
    _tmp294 = 0.001 * _tmp103
    _tmp295 = _tmp107 * _tmp265
    _tmp296 = _tmp118 * _tmp218
    _tmp297 = (
        _tmp131 * _tmp269
        + _tmp142 * _tmp223
        - _tmp149 * _tmp280
        + _tmp258 * _tmp281
        - x[6, 0] * (-_tmp295 - _tmp296)
    )
    _tmp298 = 0.001 * _tmp297
    _tmp299 = 0.004905 * _tmp4
    _tmp300 = _tmp266 * _tmp89
    _tmp301 = (
        -_tmp131 * _tmp291
        + _tmp142 * _tmp245
        + _tmp149 * _tmp290
        + _tmp289 * _tmp6
        - x[6, 0] * (_tmp265 + _tmp300)
    )
    _tmp302 = 0.001 * _tmp301
    _tmp303 = 0.004905 * _tmp1
    _tmp304 = -_tmp139 * _tmp303
    _tmp305 = -_tmp136 * _tmp303
    _tmp306 = 0.001 * _tmp78
    _tmp307 = 0.001 * _tmp86
    _tmp308 = -_tmp188
    _tmp309 = 0.001 * _tmp97
    _tmp310 = 0.003 * _tmp46
    _tmp311 = 0.003 * _tmp68
    _tmp312 = 0.014715 * _tmp51
    _tmp313 = _tmp26 * _tmp312
    _tmp314 = 0.003 * _tmp297
    _tmp315 = 0.003 * _tmp150
    _tmp316 = 0.003 * _tmp95
    _tmp317 = 0.014715 * _tmp4
    _tmp318 = _tmp317 * _tmp37
    _tmp319 = 0.003 * _tmp301
    _tmp320 = _tmp317 * _tmp8
    _tmp321 = _tmp26 * _tmp31
    _tmp322 = _tmp223 * _tmp8
    _tmp323 = _tmp245 * _tmp8
    _tmp324 = _tmp203 * _tmp32
    _tmp325 = _tmp22 * _tmp314
    _tmp326 = -_tmp312
    _tmp327 = _tmp22 * _tmp319
    _tmp328 = 0.003 * _tmp41
    _tmp329 = _tmp22 * _tmp245
    _tmp330 = _tmp22 * _tmp223
    _tmp331 = 0.003 * _tmp164
    _tmp332 = 0.003 * _tmp176
    _tmp333 = _tmp13 * _tmp3 + _tmp24
    _tmp334 = _tmp22 * _tmp333
    _tmp335 = _tmp3 * _tmp90 - _tmp6 * _tmp62
    _tmp336 = _tmp18 * _tmp335
    _tmp337 = -_tmp27 * _tmp333 + _tmp336
    _tmp338 = _tmp29 * _tmp337
    _tmp339 = _tmp338 * _tmp36
    _tmp340 = _tmp17 * _tmp335
    _tmp341 = -_tmp155 * _tmp340 - _tmp26 * _tmp90 + _tmp333 * _tmp64 + _tmp90
    _tmp342 = _tmp338 * _tmp66
    _tmp343 = _tmp15 * _tmp342 - _tmp334 * _tmp66 - _tmp341 * _tmp40 + _tmp90
    _tmp344 = _tmp343 * _tmp8
    _tmp345 = _tmp340 * _tmp67
    _tmp346 = (
        _tmp339 * _tmp66
        - _tmp341 * _tmp52
        - _tmp344 * _tmp50
        + _tmp345 * _tmp50
        + _tmp39 * _tmp68
        + _tmp84
    )
    _tmp347 = _tmp338 * _tmp62
    _tmp348 = _tmp340 * _tmp94
    _tmp349 = -_tmp180 * _tmp340 + _tmp26 * _tmp62 + _tmp333 * _tmp91 + _tmp63
    _tmp350 = _tmp338 * _tmp93
    _tmp351 = _tmp15 * _tmp350 - _tmp334 * _tmp93 - _tmp349 * _tmp40 + _tmp63
    _tmp352 = _tmp351 * _tmp8
    _tmp353 = _tmp340 * _tmp40
    _tmp354 = _tmp340 * _tmp45
    _tmp355 = _tmp30 * _tmp337
    _tmp356 = -_tmp20 * _tmp355 - _tmp23 * _tmp336 + 2.0 * _tmp333 * _tmp41
    _tmp357 = _tmp356 * _tmp8
    _tmp358 = _tmp334 * _tmp8
    _tmp359 = (
        _tmp11 * _tmp354
        - _tmp11 * _tmp357
        + _tmp186
        - _tmp26 * _tmp347
        - _tmp353 * _tmp62
        - _tmp354 * _tmp55
        + _tmp357 * _tmp55
        + _tmp358 * _tmp62
        + _tmp46 * _tmp90
    )
    _tmp360 = (
        _tmp11 * _tmp348
        + _tmp184
        - _tmp188 * _tmp349
        - _tmp348 * _tmp55
        + _tmp350 * _tmp62
        - _tmp351 * _tmp64
        + _tmp352 * _tmp55
        + _tmp359 * _tmp76
        + _tmp90 * _tmp95
    )
    _tmp361 = _tmp360 * _tmp89
    _tmp362 = _tmp192 * (
        _tmp11 * _tmp345
        - _tmp188 * _tmp341
        + _tmp191
        - _tmp343 * _tmp64
        + _tmp344 * _tmp55
        - _tmp345 * _tmp55
        + _tmp347 * _tmp66
        + _tmp359 * _tmp55
        + _tmp68 * _tmp90
    )
    _tmp363 = _tmp194 * _tmp362
    _tmp364 = _tmp338 * _tmp90
    _tmp365 = (
        _tmp160
        - _tmp26 * _tmp364
        - _tmp353 * _tmp90
        - _tmp354 * _tmp76
        + _tmp354 * _tmp9
        + _tmp357 * _tmp76
        - _tmp357 * _tmp9
        + _tmp358 * _tmp90
        - _tmp46 * _tmp62
    )
    _tmp366 = (
        _tmp165
        - _tmp166 * _tmp341
        - _tmp343 * _tmp91
        + _tmp344 * _tmp76
        - _tmp345 * _tmp76
        + _tmp345 * _tmp9
        + _tmp364 * _tmp66
        + _tmp365 * _tmp55
        - _tmp62 * _tmp68
    )
    _tmp367 = _tmp107 * _tmp366
    _tmp368 = _tmp174 * (
        -_tmp166 * _tmp349
        + _tmp177
        - _tmp348 * _tmp76
        + _tmp348 * _tmp9
        + _tmp350 * _tmp90
        - _tmp351 * _tmp91
        + _tmp352 * _tmp76
        - _tmp361
        + _tmp363
        + _tmp365 * _tmp76
        - _tmp367
        - _tmp62 * _tmp95
    )
    _tmp369 = _tmp137 * _tmp368
    _tmp370 = _tmp338 * _tmp39
    _tmp371 = _tmp26 * _tmp338
    _tmp372 = _tmp138 - _tmp353 * _tmp85 + _tmp358 * _tmp85 + _tmp370 - _tmp371 * _tmp85 + _tmp57
    _tmp373 = _tmp152 * _tmp372
    _tmp374 = _tmp113 * _tmp362
    _tmp375 = _tmp106 * _tmp362
    _tmp376 = 1.0 * _tmp334
    _tmp377 = -_tmp108 * _tmp368 + _tmp110 * _tmp361 - _tmp110 * _tmp363 + _tmp110 * _tmp367
    _tmp378 = _tmp377 * _tmp75
    _tmp379 = _tmp135 * _tmp340
    _tmp380 = _tmp360 * _tmp75
    _tmp381 = _tmp339 - _tmp353 * _tmp50 + _tmp358 * _tmp50 - _tmp371 * _tmp50 + _tmp43 + _tmp83
    _tmp382 = _tmp368 * _tmp76
    _tmp383 = _tmp114 * _tmp377 - _tmp374 * _tmp55
    _tmp384 = _tmp107 * _tmp382 + _tmp111 * _tmp375 - _tmp111 * _tmp380 + _tmp383
    _tmp385 = _tmp15 * _tmp355
    _tmp386 = (
        _tmp107 * _tmp369
        - _tmp107 * _tmp373
        - _tmp204 * _tmp384
        - _tmp206 * _tmp374
        + _tmp206 * _tmp378
        + _tmp220 * _tmp379
        - _tmp221 * _tmp376
        + _tmp221 * _tmp385
        + _tmp222 * _tmp375
        - _tmp222 * _tmp380
        + _tmp230 * _tmp381
    )
    _tmp387 = _tmp333 * _tmp8
    _tmp388 = (
        -_tmp26 * _tmp339
        - _tmp340 * _tmp53
        + _tmp354 * _tmp50
        - _tmp357 * _tmp50
        + _tmp387 * _tmp52
        + _tmp39 * _tmp46
        + _tmp43
    )
    _tmp389 = _tmp211 * _tmp340
    _tmp390 = _tmp366 * _tmp75
    _tmp391 = _tmp368 * _tmp89
    _tmp392 = _tmp362 * _tmp88
    _tmp393 = -_tmp382
    _tmp394 = -_tmp120 * _tmp390 + _tmp120 * _tmp392 + _tmp391 * _tmp55 + _tmp393
    _tmp395 = (
        _tmp135 * _tmp389
        - _tmp153 * _tmp390
        + _tmp153 * _tmp392
        - _tmp173 * _tmp381
        - _tmp204 * _tmp394
        + _tmp206 * _tmp391
        - _tmp212 * _tmp376
        + _tmp212 * _tmp385
        - _tmp369
        + _tmp373
    )
    _tmp396 = _tmp120 * _tmp375 - _tmp120 * _tmp380 + _tmp236 * _tmp368 + _tmp393
    _tmp397 = -_tmp111 * _tmp390 + _tmp111 * _tmp392 + _tmp382 * _tmp89 + _tmp383
    _tmp398 = _tmp396 * _tmp76 + _tmp397 * _tmp55
    _tmp399 = (
        _tmp132 * _tmp379
        - _tmp134 * _tmp376
        + _tmp134 * _tmp385
        + _tmp137 * _tmp396
        + _tmp140 * _tmp381
        - _tmp204 * _tmp398
        + _tmp206 * _tmp397
        + _tmp239 * _tmp372
    )
    _tmp400 = 0.5 * _tmp352
    _tmp401 = (
        -_tmp3 * _tmp400
        + _tmp348 * _tmp50
        - _tmp349 * _tmp52
        + _tmp350 * _tmp36
        + _tmp39 * _tmp95
        + _tmp96
    )
    _tmp402 = (
        _tmp102
        + _tmp348 * _tmp85
        - _tmp349 * _tmp83
        + _tmp350 * _tmp39
        - _tmp36 * _tmp95
        - _tmp400 * _tmp6
    )
    _tmp403 = _tmp152 * _tmp402
    _tmp404 = _tmp368 * _tmp98
    _tmp405 = (
        -_tmp341 * _tmp83
        - _tmp344 * _tmp85
        + _tmp345 * _tmp85
        - _tmp36 * _tmp68
        + _tmp370 * _tmp66
        + _tmp70
    )
    _tmp406 = _tmp152 * _tmp405
    _tmp407 = _tmp368 * _tmp87
    _tmp408 = _tmp124 * _tmp368
    _tmp409 = -_tmp130 * (-_tmp129 + _tmp255) + _tmp254
    _tmp410 = _tmp130 * _tmp252 + _tmp250
    _tmp411 = (
        -_tmp26 * _tmp370
        - _tmp353 * _tmp39
        + _tmp354 * _tmp85
        - _tmp357 * _tmp85
        - _tmp36 * _tmp46
        + _tmp387 * _tmp83
        + _tmp57
    )
    _tmp412 = _tmp152 * _tmp411
    _tmp413 = _tmp368 * _tmp79
    _tmp414 = (
        _tmp131
        * (
            _tmp107 * _tmp406
            - _tmp107 * _tmp407
            - _tmp221 * _tmp343
            - _tmp230 * _tmp346
            - _tmp268 * _tmp375
            + _tmp268 * _tmp380
            + _tmp275 * _tmp340
            + _tmp374 * _tmp73
            - _tmp378 * _tmp73
            - _tmp384 * _tmp68
        )
        + _tmp142 * _tmp386
        - _tmp149
        * (
            -_tmp104 * _tmp374
            + _tmp104 * _tmp378
            - _tmp107 * _tmp403
            + _tmp107 * _tmp404
            - _tmp220 * _tmp348
            + _tmp221 * _tmp351
            + _tmp230 * _tmp401
            + _tmp277 * _tmp375
            - _tmp277 * _tmp380
            + _tmp384 * _tmp95
        )
        + _tmp258
        * (
            -_tmp107 * _tmp412
            + _tmp107 * _tmp413
            - _tmp220 * _tmp354
            + _tmp220 * _tmp357
            + _tmp230 * _tmp388
            + _tmp271 * _tmp375
            - _tmp271 * _tmp380
            - _tmp374 * _tmp59
            + _tmp378 * _tmp59
            + _tmp384 * _tmp46
        )
        + _tmp260 * _tmp281
        + _tmp269 * _tmp410
        + _tmp270
        - _tmp280 * _tmp409
        - x[6, 0]
        * (
            _tmp107 * _tmp408
            + _tmp118 * _tmp374
            - _tmp118 * _tmp378
            + _tmp265 * _tmp375
            - _tmp265 * _tmp380
        )
    )
    _tmp415 = 0.001 * _tmp414
    _tmp416 = (
        -_tmp1 * _tmp143
        - _tmp131
        * (
            -_tmp132 * _tmp345
            + _tmp134 * _tmp343
            + _tmp140 * _tmp346
            + _tmp239 * _tmp405
            + _tmp396 * _tmp87
            + _tmp397 * _tmp73
            + _tmp398 * _tmp68
        )
        - _tmp133 * _tmp410
        + _tmp142 * _tmp399
        - _tmp144 * _tmp409
        - _tmp149
        * (
            _tmp104 * _tmp397
            - _tmp132 * _tmp348
            + _tmp134 * _tmp351
            + _tmp140 * _tmp401
            + _tmp239 * _tmp402
            + _tmp396 * _tmp98
            + _tmp398 * _tmp95
        )
        - _tmp258
        * (
            _tmp132 * _tmp354
            - _tmp134 * _tmp356
            - _tmp140 * _tmp388
            - _tmp239 * _tmp411
            - _tmp396 * _tmp79
            - _tmp397 * _tmp59
            - _tmp398 * _tmp46
        )
        + _tmp261
        - x[6, 0] * (-_tmp118 * _tmp397 + _tmp124 * _tmp396)
    )
    _tmp417 = _tmp110 * _tmp392
    _tmp418 = _tmp285 * _tmp366
    _tmp419 = (
        _tmp1 * _tmp289
        - _tmp131
        * (
            -_tmp173 * _tmp346
            + _tmp212 * _tmp343
            - _tmp389 * _tmp67
            + _tmp391 * _tmp73
            + _tmp394 * _tmp68
            + _tmp406
            - _tmp407
            + _tmp417 * _tmp73
            - _tmp418 * _tmp73
        )
        + _tmp142 * _tmp395
        + _tmp149
        * (
            -_tmp104 * _tmp391
            - _tmp104 * _tmp417
            + _tmp173 * _tmp401
            - _tmp212 * _tmp351
            + _tmp292 * _tmp366
            + _tmp389 * _tmp94
            - _tmp394 * _tmp95
            - _tmp403
            + _tmp404
        )
        + _tmp258
        * (
            -_tmp173 * _tmp388
            + _tmp211 * _tmp357
            - _tmp389 * _tmp45
            + _tmp391 * _tmp59
            + _tmp394 * _tmp46
            + _tmp412
            - _tmp413
            + _tmp417 * _tmp59
            - _tmp418 * _tmp59
        )
        + _tmp287
        + _tmp290 * _tmp409
        - _tmp291 * _tmp410
        - x[6, 0] * (-_tmp118 * _tmp391 + _tmp266 * _tmp390 - _tmp266 * _tmp392 - _tmp408)
    )
    _tmp420 = _tmp26 * _tmp355
    _tmp421 = _tmp203 * _tmp334
    _tmp422 = _tmp317 * _tmp338
    _tmp423 = 0.5 * _tmp129
    _tmp424 = 0.5 * _tmp117 + 1.0 * _tmp127 + _tmp130 * _tmp6 + _tmp423
    _tmp425 = -1.0 * _tmp146 - 1.0 * _tmp148
    _tmp426 = _tmp119 - _tmp125 - _tmp133 * _tmp424 - _tmp144 * _tmp425 - _tmp240 * x[6, 0]
    _tmp427 = -_tmp232 * x[6, 0] + _tmp269 * _tmp424 - _tmp280 * _tmp425 + _tmp295 + _tmp296
    _tmp428 = -_tmp201 * x[6, 0] - _tmp265 + _tmp290 * _tmp425 - _tmp291 * _tmp424 - _tmp300
    _tmp429 = -_tmp126 * _tmp39 + _tmp128 + _tmp423
    _tmp430 = -_tmp145 * _tmp36 - _tmp147 - 0.5 * _tmp251
    _tmp431 = -_tmp133 * _tmp429 - _tmp144 * _tmp430
    _tmp432 = _tmp269 * _tmp429 - _tmp280 * _tmp430
    _tmp433 = _tmp290 * _tmp430 - _tmp291 * _tmp429

    # Output terms
    _fx = numpy.zeros((8, 8))
    _fx[0, 0] = 1
    _fx[1, 0] = 0
    _fx[2, 0] = 0
    _fx[3, 0] = 0
    _fx[4, 0] = 0
    _fx[5, 0] = 0
    _fx[6, 0] = 0
    _fx[7, 0] = 0
    _fx[0, 1] = 0
    _fx[1, 1] = 1
    _fx[2, 1] = 0
    _fx[3, 1] = 0
    _fx[4, 1] = 0
    _fx[5, 1] = 0
    _fx[6, 1] = 0
    _fx[7, 1] = 0
    _fx[0, 2] = 0
    _fx[1, 2] = 0
    _fx[2, 2] = 1
    _fx[3, 2] = 0
    _fx[4, 2] = (
        _tmp151 * _tmp54
        - _tmp172 * _tmp299
        + _tmp217 * _tmp298
        + _tmp244 * _tmp302
        + _tmp248
        * (
            -_tmp104 * _tmp216
            - _tmp11 * _tmp162
            + _tmp156 * _tmp41
            + _tmp166
            + _tmp185
            - _tmp217 * _tmp224
            - _tmp235 * _tmp73
            - _tmp242 * _tmp59
            - _tmp244 * _tmp246
            - _tmp247 * _tmp54
            + _tmp32 * _tmp64
            - _tmp37 * _tmp65
        )
        + _tmp262 * _tmp263
        + _tmp282 * _tmp283
        + _tmp293 * _tmp294
        + _tmp304
    )
    _fx[5, 2] = (
        _tmp151 * _tmp257
        - _tmp208 * _tmp299
        + _tmp248
        * (
            _tmp161
            - _tmp162 * _tmp9
            - _tmp216 * _tmp98
            - _tmp224 * _tmp249
            - _tmp235 * _tmp87
            - _tmp242 * _tmp79
            - _tmp246 * _tmp259
            - _tmp247 * _tmp257
            + _tmp308
            + _tmp32 * _tmp91
            - _tmp37 * _tmp92
            + _tmp40 * _tmp64
        )
        + _tmp249 * _tmp298
        + _tmp259 * _tmp302
        + _tmp262 * _tmp306
        + _tmp282 * _tmp307
        + _tmp293 * _tmp309
        + _tmp305
    )
    _fx[6, 2] = (
        _tmp159 * _tmp314
        - _tmp162 * _tmp317
        - _tmp167 * _tmp314
        - _tmp175 * _tmp319
        + _tmp183 * _tmp319
        + _tmp248
        * (
            -_tmp141 * _tmp34
            + _tmp141 * _tmp49
            - _tmp158 * _tmp322
            + _tmp167 * _tmp223
            + _tmp175 * _tmp245
            - _tmp182 * _tmp323
            + _tmp215
            - _tmp216 * _tmp95
            - _tmp235 * _tmp68
            - _tmp242 * _tmp46
            + _tmp321
            - _tmp324
        )
        - _tmp26 * _tmp318
        + _tmp262 * _tmp310
        + _tmp282 * _tmp311
        + _tmp293 * _tmp316
        + _tmp313
        + _tmp315 * _tmp34
        - _tmp315 * _tmp49
        + _tmp32 * _tmp320
    )
    _fx[7, 2] = (
        -_tmp154 * _tmp314
        + _tmp157 * _tmp325
        + _tmp162 * _tmp315
        + _tmp171 * _tmp315
        - _tmp179 * _tmp319
        + _tmp181 * _tmp327
        + _tmp248
        * (
            -_tmp141 * _tmp215
            - _tmp141 * _tmp321
            + _tmp141 * _tmp324
            + _tmp154 * _tmp223
            - _tmp157 * _tmp330
            - _tmp164 * _tmp235
            - _tmp176 * _tmp216
            + _tmp179 * _tmp245
            - _tmp181 * _tmp329
            + _tmp204 * _tmp242
            - _tmp31
        )
        - _tmp262 * _tmp328
        + _tmp282 * _tmp331
        + _tmp293 * _tmp332
        - _tmp315 * _tmp44
        + _tmp318
        + _tmp326
    )
    _fx[0, 3] = 0
    _fx[1, 3] = 0
    _fx[2, 3] = 0
    _fx[3, 3] = 1
    _fx[4, 3] = (
        _tmp151 * _tmp388
        + _tmp248
        * (
            -_tmp104 * _tmp395
            - _tmp11 * _tmp353
            + _tmp166
            + _tmp186
            - _tmp224 * _tmp346
            - _tmp246 * _tmp401
            - _tmp247 * _tmp388
            + _tmp334 * _tmp64
            - _tmp338 * _tmp65
            + _tmp347
            - _tmp386 * _tmp73
            - _tmp399 * _tmp59
        )
        + _tmp263 * _tmp416
        + _tmp294 * _tmp419
        + _tmp298 * _tmp346
        - _tmp299 * _tmp381
        + _tmp302 * _tmp401
        + _tmp304
        + _tmp415 * _tmp72
    )
    _fx[5, 3] = (
        _tmp151 * _tmp411
        + _tmp248
        * (
            _tmp160
            - _tmp224 * _tmp405
            - _tmp246 * _tmp402
            - _tmp247 * _tmp411
            + _tmp308
            + _tmp334 * _tmp91
            - _tmp338 * _tmp92
            - _tmp353 * _tmp9
            + _tmp364
            - _tmp386 * _tmp87
            - _tmp395 * _tmp98
            - _tmp399 * _tmp79
        )
        + _tmp298 * _tmp405
        - _tmp299 * _tmp372
        + _tmp302 * _tmp402
        + _tmp305
        + _tmp306 * _tmp416
        + _tmp309 * _tmp419
        + _tmp415 * _tmp86
    )
    _fx[6, 3] = (
        _tmp248
        * (
            _tmp141 * _tmp354
            - _tmp141 * _tmp357
            + _tmp223 * _tmp345
            + _tmp245 * _tmp348
            - _tmp322 * _tmp343
            - _tmp323 * _tmp351
            + _tmp379
            - _tmp386 * _tmp68
            - _tmp395 * _tmp95
            - _tmp399 * _tmp46
            + _tmp420
            - _tmp421
        )
        - _tmp26 * _tmp422
        + _tmp310 * _tmp416
        + _tmp311 * _tmp414
        + _tmp313
        + _tmp314 * _tmp344
        - _tmp314 * _tmp345
        - _tmp315 * _tmp354
        + _tmp315 * _tmp357
        + _tmp316 * _tmp419
        - _tmp317 * _tmp353
        - _tmp319 * _tmp348
        + _tmp319 * _tmp352
        + _tmp320 * _tmp334
    )
    _fx[7, 3] = (
        _tmp248
        * (
            -_tmp141 * _tmp379
            - _tmp141 * _tmp420
            + _tmp141 * _tmp421
            - _tmp164 * _tmp386
            - _tmp176 * _tmp395
            + _tmp204 * _tmp399
            + _tmp223 * _tmp342
            + _tmp245 * _tmp350
            - _tmp329 * _tmp349
            - _tmp330 * _tmp341
            - _tmp355
        )
        - _tmp314 * _tmp342
        + _tmp315 * _tmp353
        - _tmp315 * _tmp358
        + _tmp315 * _tmp371
        - _tmp319 * _tmp350
        + _tmp325 * _tmp341
        + _tmp326
        + _tmp327 * _tmp349
        - _tmp328 * _tmp416
        + _tmp331 * _tmp414
        + _tmp332 * _tmp419
        + _tmp422
    )
    _fx[0, 4] = 0.00300000000000000
    _fx[1, 4] = 0
    _fx[2, 4] = 0
    _fx[3, 4] = 0
    _fx[4, 4] = 1
    _fx[5, 4] = 0
    _fx[6, 4] = 0
    _fx[7, 4] = 0
    _fx[0, 5] = 0
    _fx[1, 5] = 0.00300000000000000
    _fx[2, 5] = 0
    _fx[3, 5] = 0
    _fx[4, 5] = 0
    _fx[5, 5] = 1
    _fx[6, 5] = 0
    _fx[7, 5] = 0
    _fx[0, 6] = 0
    _fx[1, 6] = 0
    _fx[2, 6] = 0.00300000000000000
    _fx[3, 6] = 0
    _fx[4, 6] = _tmp263 * _tmp426 + _tmp283 * _tmp427 + _tmp294 * _tmp428
    _fx[5, 6] = _tmp306 * _tmp426 + _tmp307 * _tmp427 + _tmp309 * _tmp428
    _fx[6, 6] = _tmp310 * _tmp426 + _tmp311 * _tmp427 + _tmp316 * _tmp428 + 1.0
    _fx[7, 6] = -_tmp328 * _tmp426 + _tmp331 * _tmp427 + _tmp332 * _tmp428
    _fx[0, 7] = 0
    _fx[1, 7] = 0
    _fx[2, 7] = 0
    _fx[3, 7] = 0.00300000000000000
    _fx[4, 7] = _tmp263 * _tmp431 + _tmp283 * _tmp432 + _tmp294 * _tmp433
    _fx[5, 7] = _tmp306 * _tmp431 + _tmp307 * _tmp432 + _tmp309 * _tmp433
    _fx[6, 7] = _tmp310 * _tmp431 + _tmp311 * _tmp432 + _tmp316 * _tmp433
    _fx[7, 7] = -_tmp328 * _tmp431 + _tmp331 * _tmp432 + _tmp332 * _tmp433 + 1.0
    return _fx
